# -*- coding: utf-8 -*-
# Generated by Django 1.9.6 on 2016-05-30 18:16
from __future__ import unicode_literals

from django.db import migrations, models
import django.db.models.deletion
import djchoices.choices
import relativefilepathfield.fields


class Migration(migrations.Migration):

    initial = True

    dependencies = [
        ('contenttypes', '0002_remove_content_type_name'),
    ]

    operations = [
        migrations.CreateModel(
            name='AbstractDocumentBlock',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('order', models.PositiveIntegerField(help_text='Блоки выстраиваются по возрастанию порядка')),
            ],
            options={
                'ordering': ('document', 'order'),
            },
        ),
        migrations.CreateModel(
            name='AbstractTableStyleCommand',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('start_column', models.IntegerField(help_text='Координаты начала: столбец')),
                ('start_row', models.IntegerField(help_text='Координаты начала: строка')),
                ('stop_column', models.IntegerField(help_text='Координаты конца: столбец')),
                ('stop_row', models.IntegerField(help_text='Координаты конца: строка')),
            ],
            options={
                'abstract': False,
            },
        ),
        migrations.CreateModel(
            name='Document',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(help_text='Не показывается школьникам. Например, «Договор 2016 с Берендеевыми Полянами»', max_length=255)),
                ('page_size', models.CharField(choices=[('A6', 'A6'), ('A5', 'A5'), ('A4', 'A4'), ('A3', 'A3'), ('A2', 'A2'), ('A1', 'A1'), ('A0', 'A0'), ('Letter', 'Letter'), ('Legal', 'Legal'), ('11x17', '11x17'), ('B6', 'B6'), ('B5', 'B5'), ('B4', 'B4'), ('B3', 'B3'), ('B2', 'B2'), ('B1', 'B1'), ('B0', 'B0')], max_length=20, validators=[djchoices.choices.ChoicesValidator({'11x17': '11x17', 'A0': 'A0', 'A1': 'A1', 'A2': 'A2', 'A3': 'A3', 'A4': 'A4', 'A5': 'A5', 'A6': 'A6', 'B0': 'B0', 'B1': 'B1', 'B2': 'B2', 'B3': 'B3', 'B4': 'B4', 'B5': 'B5', 'B6': 'B6', 'Legal': 'Legal', 'Letter': 'Letter'})])),
                ('left_margin', models.IntegerField(default=0)),
                ('right_margin', models.IntegerField(default=0)),
                ('top_margin', models.IntegerField(default=0)),
                ('bottom_margin', models.IntegerField(default=0)),
            ],
        ),
        migrations.CreateModel(
            name='Font',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(max_length=100)),
                ('filename', models.FilePathField(match='*.ttf', max_length=1000, recursive=True, verbose_name='C:\\Users\\andgein\\Documents\\Work\\2015\\15. SIStema\\SIStema\\src\\uploads\\generator-fonts')),
            ],
        ),
        migrations.CreateModel(
            name='ParagraphStyle',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(max_length=100)),
                ('leading', models.FloatField()),
                ('alignment', models.PositiveIntegerField(choices=[(4, 'Justify'), (0, 'Left'), (2, 'Right'), (1, 'Center')], validators=[djchoices.choices.ChoicesValidator({0: 'Left', 1: 'Center', 2: 'Right', 4: 'Justify'})])),
                ('font_size', models.PositiveIntegerField()),
                ('space_before', models.PositiveIntegerField()),
                ('space_after', models.PositiveIntegerField()),
                ('left_indent', models.PositiveIntegerField()),
                ('bullet_font', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='+', to='generator.Font')),
                ('font', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='+', to='generator.Font')),
            ],
        ),
        migrations.CreateModel(
            name='TableCell',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('order', models.PositiveIntegerField(help_text='Ячейки упорядочиваются по возрастанию порядка')),
            ],
        ),
        migrations.CreateModel(
            name='TableRow',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('order', models.PositiveIntegerField(help_text='Строки упорядочиваются по возрастанию порядка')),
            ],
        ),
        migrations.CreateModel(
            name='CellFormattingTableStyleCommand',
            fields=[
                ('abstracttablestylecommand_ptr', models.OneToOneField(auto_created=True, on_delete=django.db.models.deletion.CASCADE, parent_link=True, primary_key=True, serialize=False, to='generator.AbstractTableStyleCommand')),
            ],
            options={
                'abstract': False,
            },
            bases=('generator.abstracttablestylecommand',),
        ),
        migrations.CreateModel(
            name='LineTableStyleCommand',
            fields=[
                ('abstracttablestylecommand_ptr', models.OneToOneField(auto_created=True, on_delete=django.db.models.deletion.CASCADE, parent_link=True, primary_key=True, serialize=False, to='generator.AbstractTableStyleCommand')),
                ('command_name', models.CharField(choices=[('LINEBEFORE', 'Linebefore'), ('BOX', 'Box'), ('LINEBELOW', 'Linebelow'), ('GRID', 'Grid'), ('INNERGRID', 'Innergrid'), ('LINEAFTER', 'Lineafter'), ('OUTLINE', 'Outline'), ('LINEABOVE', 'Lineabove')], max_length=100)),
                ('thickness', models.FloatField(help_text='В пунктах')),
                ('color', models.CharField(choices=[('0x000000', 'Black'), ('0xffffff', 'White'), ('0xff0000', 'Red'), ('0x008000', 'Green'), ('0x0000ff', 'Blue'), ('0xffff00', 'Yellow'), ('0x00ffff', 'Cyan'), ('0xff00ff', 'Magenta'), ('0xa52a2a', 'Brown')], max_length=20, validators=[djchoices.choices.ChoicesValidator({'0x000000': 'Black', '0x0000ff': 'Blue', '0x008000': 'Green', '0x00ffff': 'Cyan', '0xa52a2a': 'Brown', '0xff0000': 'Red', '0xff00ff': 'Magenta', '0xffff00': 'Yellow', '0xffffff': 'White'})])),
            ],
            options={
                'abstract': False,
            },
            bases=('generator.abstracttablestylecommand',),
        ),
        migrations.CreateModel(
            name='PageBreak',
            fields=[
                ('abstractdocumentblock_ptr', models.OneToOneField(auto_created=True, on_delete=django.db.models.deletion.CASCADE, parent_link=True, primary_key=True, serialize=False, to='generator.AbstractDocumentBlock')),
            ],
            options={
                'abstract': False,
            },
            bases=('generator.abstractdocumentblock',),
        ),
        migrations.CreateModel(
            name='Paragraph',
            fields=[
                ('abstractdocumentblock_ptr', models.OneToOneField(auto_created=True, on_delete=django.db.models.deletion.CASCADE, parent_link=True, primary_key=True, serialize=False, to='generator.AbstractDocumentBlock')),
                ('text', models.TextField()),
                ('bulletText', models.TextField(blank=True, default=None, null=True)),
                ('style', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='generator.ParagraphStyle')),
            ],
            options={
                'abstract': False,
            },
            bases=('generator.abstractdocumentblock',),
        ),
        migrations.CreateModel(
            name='Spacer',
            fields=[
                ('abstractdocumentblock_ptr', models.OneToOneField(auto_created=True, on_delete=django.db.models.deletion.CASCADE, parent_link=True, primary_key=True, serialize=False, to='generator.AbstractDocumentBlock')),
                ('width', models.PositiveIntegerField()),
                ('height', models.PositiveIntegerField()),
                ('is_glue', models.BooleanField(default=False)),
            ],
            options={
                'abstract': False,
            },
            bases=('generator.abstractdocumentblock',),
        ),
        migrations.CreateModel(
            name='Table',
            fields=[
                ('abstractdocumentblock_ptr', models.OneToOneField(auto_created=True, on_delete=django.db.models.deletion.CASCADE, parent_link=True, primary_key=True, serialize=False, to='generator.AbstractDocumentBlock')),
            ],
            options={
                'abstract': False,
            },
            bases=('generator.abstractdocumentblock',),
        ),
        migrations.AddField(
            model_name='tablecell',
            name='block',
            field=models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='+', to='generator.AbstractDocumentBlock'),
        ),
        migrations.AddField(
            model_name='tablecell',
            name='row',
            field=models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='cells', to='generator.TableRow'),
        ),
        migrations.AddField(
            model_name='abstracttablestylecommand',
            name='polymorphic_ctype',
            field=models.ForeignKey(editable=False, null=True, on_delete=django.db.models.deletion.CASCADE, related_name='polymorphic_generator.abstracttablestylecommand_set+', to='contenttypes.ContentType'),
        ),
        migrations.AddField(
            model_name='abstractdocumentblock',
            name='document',
            field=models.ForeignKey(blank=True, default=None, null=True, on_delete=django.db.models.deletion.CASCADE, related_name='blocks', to='generator.Document'),
        ),
        migrations.AddField(
            model_name='abstractdocumentblock',
            name='polymorphic_ctype',
            field=models.ForeignKey(editable=False, null=True, on_delete=django.db.models.deletion.CASCADE, related_name='polymorphic_generator.abstractdocumentblock_set+', to='contenttypes.ContentType'),
        ),
        migrations.CreateModel(
            name='AlignmentTableStyleCommand',
            fields=[
                ('cellformattingtablestylecommand_ptr', models.OneToOneField(auto_created=True, on_delete=django.db.models.deletion.CASCADE, parent_link=True, primary_key=True, serialize=False, to='generator.CellFormattingTableStyleCommand')),
                ('align', models.CharField(choices=[('LEFT', 'LEFT'), ('RIGHT', 'RIGHT'), ('CENTER', 'CENTER'), ('DECIMAL', 'DECIMAL')], max_length=20, validators=[djchoices.choices.ChoicesValidator({'CENTER': 'CENTER', 'DECIMAL': 'DECIMAL', 'LEFT': 'LEFT', 'RIGHT': 'RIGHT'})])),
            ],
            options={
                'abstract': False,
            },
            bases=('generator.cellformattingtablestylecommand',),
        ),
        migrations.CreateModel(
            name='FontTableStyleCommand',
            fields=[
                ('cellformattingtablestylecommand_ptr', models.OneToOneField(auto_created=True, on_delete=django.db.models.deletion.CASCADE, parent_link=True, primary_key=True, serialize=False, to='generator.CellFormattingTableStyleCommand')),
                ('size', models.PositiveIntegerField(blank=True, default=None, null=True)),
                ('font', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='generator.Font')),
            ],
            options={
                'abstract': False,
            },
            bases=('generator.cellformattingtablestylecommand',),
        ),
        migrations.CreateModel(
            name='LeadingTableStyleCommand',
            fields=[
                ('cellformattingtablestylecommand_ptr', models.OneToOneField(auto_created=True, on_delete=django.db.models.deletion.CASCADE, parent_link=True, primary_key=True, serialize=False, to='generator.CellFormattingTableStyleCommand')),
                ('leading', models.PositiveIntegerField(help_text='В пунктах')),
            ],
            options={
                'abstract': False,
            },
            bases=('generator.cellformattingtablestylecommand',),
        ),
        migrations.CreateModel(
            name='PaddingTableStyleCommand',
            fields=[
                ('cellformattingtablestylecommand_ptr', models.OneToOneField(auto_created=True, on_delete=django.db.models.deletion.CASCADE, parent_link=True, primary_key=True, serialize=False, to='generator.CellFormattingTableStyleCommand')),
                ('direction', models.CharField(choices=[('LEFT', 'Left'), ('RIGHT', 'Right'), ('BOTTOM', 'Bottom'), ('TOP', 'Top')], max_length=6)),
                ('padding', models.PositiveIntegerField(help_text='В пунктах')),
            ],
            options={
                'abstract': False,
            },
            bases=('generator.cellformattingtablestylecommand',),
        ),
        migrations.CreateModel(
            name='TextColorTableStyleCommand',
            fields=[
                ('cellformattingtablestylecommand_ptr', models.OneToOneField(auto_created=True, on_delete=django.db.models.deletion.CASCADE, parent_link=True, primary_key=True, serialize=False, to='generator.CellFormattingTableStyleCommand')),
                ('color', models.CharField(choices=[('0x000000', 'Black'), ('0xffffff', 'White'), ('0xff0000', 'Red'), ('0x008000', 'Green'), ('0x0000ff', 'Blue'), ('0xffff00', 'Yellow'), ('0x00ffff', 'Cyan'), ('0xff00ff', 'Magenta'), ('0xa52a2a', 'Brown')], max_length=20, validators=[djchoices.choices.ChoicesValidator({'0x000000': 'Black', '0x0000ff': 'Blue', '0x008000': 'Green', '0x00ffff': 'Cyan', '0xa52a2a': 'Brown', '0xff0000': 'Red', '0xff00ff': 'Magenta', '0xffff00': 'Yellow', '0xffffff': 'White'})])),
            ],
            options={
                'abstract': False,
            },
            bases=('generator.cellformattingtablestylecommand',),
        ),
        migrations.CreateModel(
            name='ValignTableStyleCommand',
            fields=[
                ('cellformattingtablestylecommand_ptr', models.OneToOneField(auto_created=True, on_delete=django.db.models.deletion.CASCADE, parent_link=True, primary_key=True, serialize=False, to='generator.CellFormattingTableStyleCommand')),
                ('direction', models.CharField(choices=[('TOP', 'Top'), ('MIDDLE', 'Middle'), ('BOTTOM', 'Bottom')], max_length=6)),
            ],
            options={
                'abstract': False,
            },
            bases=('generator.cellformattingtablestylecommand',),
        ),
        migrations.AddField(
            model_name='tablerow',
            name='table',
            field=models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='rows', to='generator.Table'),
        ),
        migrations.AddField(
            model_name='abstracttablestylecommand',
            name='table',
            field=models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='style_commands', to='generator.Table'),
        ),
        migrations.AlterUniqueTogether(
            name='abstractdocumentblock',
            unique_together=set([('document', 'order')]),
        ),
        migrations.AlterField(
            model_name='font',
            name='filename',
            field=models.FilePathField(match='.*\\.ttf', max_length=1000, recursive=True, verbose_name='C:\\Users\\andgein\\Documents\\Work\\2015\\15. SIStema\\SIStema\\src\\uploads\\generator-fonts'),
        ),
        migrations.AlterField(
            model_name='font',
            name='filename',
            field=models.FilePathField(match='.*\\.ttf', max_length=1000, path='C:\\Users\\andgein\\Documents\\Work\\2015\\15. SIStema\\SIStema\\src\\uploads\\generator-fonts', recursive=True),
        ),
        migrations.AlterField(
            model_name='font',
            name='filename',
            field=relativefilepathfield.fields.RelativeFilePathField(match='.*\\.ttf', max_length=1000, path='C:\\Users\\andgein\\Documents\\Work\\2015\\15. SIStema\\SIStema\\src\\uploads\\generator-fonts', recursive=True),
        ),
        migrations.AlterModelOptions(
            name='tablecell',
            options={'ordering': ('block', 'order')},
        ),
        migrations.AlterModelOptions(
            name='tablerow',
            options={'ordering': ('table', 'order')},
        ),
        migrations.AlterUniqueTogether(
            name='tablecell',
            unique_together=set([('row', 'order')]),
        ),
        migrations.AlterUniqueTogether(
            name='tablerow',
            unique_together=set([('table', 'order')]),
        ),
        migrations.AlterField(
            model_name='abstracttablestylecommand',
            name='start_column',
            field=models.IntegerField(default=0, help_text='Координаты начала: столбец'),
        ),
        migrations.AlterField(
            model_name='abstracttablestylecommand',
            name='start_row',
            field=models.IntegerField(default=0, help_text='Координаты начала: строка'),
        ),
        migrations.AlterField(
            model_name='abstracttablestylecommand',
            name='stop_column',
            field=models.IntegerField(default=-1, help_text='Координаты конца: столбец'),
        ),
        migrations.AlterField(
            model_name='abstracttablestylecommand',
            name='stop_row',
            field=models.IntegerField(default=-1, help_text='Координаты конца: строка'),
        ),
        migrations.AlterModelOptions(
            name='tablecell',
            options={'ordering': ('row', 'order')},
        ),
        migrations.AlterUniqueTogether(
            name='tablecell',
            unique_together=set([('row', 'order')]),
        ),
        migrations.CreateModel(
            name='FontFamily',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(max_length=100)),
                ('bold', models.ForeignKey(blank=True, default=None, help_text='Полужирное начертание', null=True, on_delete=django.db.models.deletion.CASCADE, related_name='+', to='generator.Font')),
                ('bold_italic', models.ForeignKey(blank=True, default=None, help_text='Полужирное курсивное начертание', null=True, on_delete=django.db.models.deletion.CASCADE, related_name='+', to='generator.Font')),
                ('italic', models.ForeignKey(blank=True, default=None, help_text='Курсивное начертание', null=True, on_delete=django.db.models.deletion.CASCADE, related_name='+', to='generator.Font')),
                ('normal', models.ForeignKey(blank=True, default=None, help_text='Обычное начертание', null=True, on_delete=django.db.models.deletion.CASCADE, related_name='+', to='generator.Font')),
            ],
        ),
        migrations.AlterModelOptions(
            name='fontfamily',
            options={'verbose_name_plural': 'Font families'},
        ),
        migrations.AlterField(
            model_name='font',
            name='name',
            field=models.CharField(max_length=100, unique=True),
        ),
        migrations.AlterField(
            model_name='fontfamily',
            name='name',
            field=models.CharField(max_length=100, unique=True),
        ),
    ]
